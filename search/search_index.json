{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Music API Doc This is a sample Mkdocs generated Music API Developers' Documentation. Here is the OpenAPI/ Swagger generated API reference. Click Here Welcome to the Music API developers' documentation. This guide is designed to help developers understand and integrate with our RESTful API, enabling you to manage playlists and users with ease. Overview Learn what the API does, key concepts, and how it fits into your music-related application. API Reference Dive into the technical details \u2014 all available endpoints, request/response formats, and error codes. Use Cases Explore real-world examples and tutorials on using the API, including quickstarts and webhook integration. Tools Download the OpenAPI specification and access tools like Swagger for testing. Changelog Track updates to the API and changes across different versions. Quick Start Ready to build? Start here: Authentication Guide Need Help? Have questions or issues? Contact our team at support@muzicplayz.com","title":"Home"},{"location":"#welcome-to-music-api-doc","text":"This is a sample Mkdocs generated Music API Developers' Documentation. Here is the OpenAPI/ Swagger generated API reference. Click Here Welcome to the Music API developers' documentation. This guide is designed to help developers understand and integrate with our RESTful API, enabling you to manage playlists and users with ease.","title":"Welcome to Music API Doc"},{"location":"#overview","text":"Learn what the API does, key concepts, and how it fits into your music-related application.","title":"Overview"},{"location":"#api-reference","text":"Dive into the technical details \u2014 all available endpoints, request/response formats, and error codes.","title":"API Reference"},{"location":"#use-cases","text":"Explore real-world examples and tutorials on using the API, including quickstarts and webhook integration.","title":"Use Cases"},{"location":"#tools","text":"Download the OpenAPI specification and access tools like Swagger for testing.","title":"Tools"},{"location":"#changelog","text":"Track updates to the API and changes across different versions.","title":"Changelog"},{"location":"#quick-start","text":"Ready to build? Start here: Authentication Guide","title":"Quick Start"},{"location":"#need-help","text":"Have questions or issues? Contact our team at support@muzicplayz.com","title":"Need Help?"},{"location":"api/authentication/","text":"API Authentication All Music API endpoints require a basic authorization in the security header. Request /playlist: get: Host: (https://api.muzicplayz.com/v3) security: - basauth: []","title":"Authentication"},{"location":"api/authentication/#api-authentication","text":"All Music API endpoints require a basic authorization in the security header.","title":"API Authentication"},{"location":"api/authentication/#request","text":"/playlist: get: Host: (https://api.muzicplayz.com/v3) security: - basauth: []","title":"Request"},{"location":"api/endpoints/","text":"API Endpoints The following endpoints allow you to Get, Create & Delete your Playlists via the Music API. Returns the playlists - GET Playlists Gets all the song playlists of a user. URL GET https://api.muzicplayz.com/v3/playlist Query Parameters Parameter Description Type Required limit Number of playlists to return integer No offset Index of the first playlist to return (e.g., 0 = start at beginning, 10 = skip first 10) integer No search Filter/Search for playlists matching a specific keyword or type of song string No Headers Header Name Description Value Required security Basic Authorization Yes Sample Request GET https://api.muzicplayz.com/v3/playlist?limit = 10 & offset = 20 & search = jazz security: - basauth: [] Response Details of the playlist with songs. /components/schemas/playlistwithsongs Element Description Type Comments id Id of the playlist integer name Name of the playlist string songs Array of song details array Check song details Details of related to the songs in the playlist. /components/schemas/song Element Description Type Comments id Id of the song integer title Name of the song string artist Name of the song string Sample Response [ { \"id\": 0, \"name\": \"string\", \"songs\": [ { \"id\": 0, \"title\": \"string\", \"artist\": \"string\" } ] } ] Creates a playlist - POST Playlist Creates a song playlist. URL POST https://api.muzicplayz.com/v3/playlist Headers Header Name Description Value Required security Basic Authorization Yes Request Body Details of the new song playlist /components/schemas/newPlaylist Element Description Type Required name Name of the playlist string Yes songIds Array of song Ids array Yes Sample Request POST https://api.muzicplayz.com/v3/playlist security: - basauth: [] requestBody: required: true content: application/json: schema: $ref : \"#/components/schemas/newPlaylist\" Response Details of the playlist with songs. /components/schemas/playlistwithsongs Element Description Type Comments id Id of the playlist integer name Name of the playlist string songs Array of song details array Check song details Details of related to the songs in the playlist. /components/schemas/song Element Description Type Comments id Id of the song integer title Name of the song string artist Name of the song string Sample Response { \"id\" : 0 , \"name\" : \"string\" , \"songs\" : [ { \"id\" : 0 , \"title\" : \"string\" , \"artist\" : \"string\" } ] } Returns a specific playlist - GET Specific Playlist Gets a specific song playlist. URL GET https://api.muzicplayz.com/v3/playlist/ { playlist-id } Path Parameters Parameter Description Type Required playlist-id Id of the playlist to return integer Yes Headers Header Name Description Value Required security Basic Authorization Yes Sample Request GET https://api.muzicplayz.com/v3/playlist/ { playlist-id } security: - basauth: [] parameters: - name: playlist-id in : path required: true schema: type: string Response Details of the playlist with songs. /components/schemas/playlistwithsongs Element Description Type Comments id Id of the playlist integer name Name of the playlist string songs Array of song details array Check song details Details of related to the songs in the playlist. /components/schemas/song Element Description Type Comments id Id of the song integer title Name of the song string artist Name of the song string Sample Response [ { \"id\": 0, \"name\": \"string\", \"songs\": [ { \"id\": 0, \"title\": \"string\", \"artist\": \"string\" } ] } ] Deletes a specific playlist - DELETE Specific Playlist Deletes a specific song playlist. URL DELETE https://api.muzicplayz.com/v3/playlist/ { playlist-id } Path Parameters Parameter Description Type Required playlist-id Id of the playlist to return integer Yes Headers Header Name Description Value Required security Basic Authorization Yes Sample Request DELETE https://api.muzicplayz.com/v3/playlist/ { playlist-id } security: - basauth: [] parameters: - name: playlist-id in : path required: true schema: type: string Response Details of the error message in response. /components/schemas/error Element Description Type Comments errormsg Id of the playlist integer logdata Name of the playlist string Check logdata details Details of logdata. Element Description Type Comments entry Id of the song integer date Name of the song integer Sample Response { \"errormsg\": \"string\", \"logdata\": { \"entry\": 0, \"date\": 0 } } Returns a specific playlist as Image - GET Specific Playlist as Image Gets a specific song playlist as an image. URL GET https://api.muzicplayz.com/v3/playlist/ { playlist-id } /image Path Parameters Parameter Description Type Required playlist-id Id of the playlist to return integer Yes Headers Header Name Description Value Required security Basic Authorization Yes Sample Request GET https://api.muzicplayz.com/v3/playlist/ { playlist-id } /image security: - basauth: [] parameters: - name: playlist-id in : path required: true schema: type: string Sample Response string","title":"Endpoints"},{"location":"api/endpoints/#api-endpoints","text":"The following endpoints allow you to Get, Create & Delete your Playlists via the Music API.","title":"API Endpoints"},{"location":"api/endpoints/#returns-the-playlists-get-playlists","text":"Gets all the song playlists of a user.","title":"Returns the playlists - GET Playlists"},{"location":"api/endpoints/#url","text":"GET https://api.muzicplayz.com/v3/playlist","title":"URL"},{"location":"api/endpoints/#query-parameters","text":"Parameter Description Type Required limit Number of playlists to return integer No offset Index of the first playlist to return (e.g., 0 = start at beginning, 10 = skip first 10) integer No search Filter/Search for playlists matching a specific keyword or type of song string No","title":"Query Parameters"},{"location":"api/endpoints/#headers","text":"Header Name Description Value Required security Basic Authorization Yes","title":"Headers"},{"location":"api/endpoints/#sample-request","text":"GET https://api.muzicplayz.com/v3/playlist?limit = 10 & offset = 20 & search = jazz security: - basauth: []","title":"Sample Request"},{"location":"api/endpoints/#response","text":"","title":"Response"},{"location":"api/endpoints/#details-of-the-playlist-with-songs","text":"","title":"Details of the playlist with songs."},{"location":"api/endpoints/#componentsschemasplaylistwithsongs","text":"Element Description Type Comments id Id of the playlist integer name Name of the playlist string songs Array of song details array Check song details","title":"/components/schemas/playlistwithsongs"},{"location":"api/endpoints/#details-of-related-to-the-songs-in-the-playlist","text":"","title":"Details of related to the songs in the playlist."},{"location":"api/endpoints/#componentsschemassong","text":"Element Description Type Comments id Id of the song integer title Name of the song string artist Name of the song string","title":"/components/schemas/song"},{"location":"api/endpoints/#sample-response","text":"[ { \"id\": 0, \"name\": \"string\", \"songs\": [ { \"id\": 0, \"title\": \"string\", \"artist\": \"string\" } ] } ]","title":"Sample Response"},{"location":"api/endpoints/#creates-a-playlist-post-playlist","text":"Creates a song playlist.","title":"Creates a playlist - POST Playlist"},{"location":"api/endpoints/#url_1","text":"POST https://api.muzicplayz.com/v3/playlist","title":"URL"},{"location":"api/endpoints/#headers_1","text":"Header Name Description Value Required security Basic Authorization Yes","title":"Headers"},{"location":"api/endpoints/#request-body","text":"","title":"Request Body"},{"location":"api/endpoints/#details-of-the-new-song-playlist","text":"","title":"Details of the new song playlist"},{"location":"api/endpoints/#componentsschemasnewplaylist","text":"Element Description Type Required name Name of the playlist string Yes songIds Array of song Ids array Yes","title":"/components/schemas/newPlaylist"},{"location":"api/endpoints/#sample-request_1","text":"POST https://api.muzicplayz.com/v3/playlist security: - basauth: [] requestBody: required: true content: application/json: schema: $ref : \"#/components/schemas/newPlaylist\"","title":"Sample Request"},{"location":"api/endpoints/#response_1","text":"","title":"Response"},{"location":"api/endpoints/#details-of-the-playlist-with-songs_1","text":"","title":"Details of the playlist with songs."},{"location":"api/endpoints/#componentsschemasplaylistwithsongs_1","text":"Element Description Type Comments id Id of the playlist integer name Name of the playlist string songs Array of song details array Check song details","title":"/components/schemas/playlistwithsongs"},{"location":"api/endpoints/#details-of-related-to-the-songs-in-the-playlist_1","text":"","title":"Details of related to the songs in the playlist."},{"location":"api/endpoints/#componentsschemassong_1","text":"Element Description Type Comments id Id of the song integer title Name of the song string artist Name of the song string","title":"/components/schemas/song"},{"location":"api/endpoints/#sample-response_1","text":"{ \"id\" : 0 , \"name\" : \"string\" , \"songs\" : [ { \"id\" : 0 , \"title\" : \"string\" , \"artist\" : \"string\" } ] }","title":"Sample Response"},{"location":"api/endpoints/#returns-a-specific-playlist-get-specific-playlist","text":"Gets a specific song playlist.","title":"Returns a specific playlist - GET Specific Playlist"},{"location":"api/endpoints/#url_2","text":"GET https://api.muzicplayz.com/v3/playlist/ { playlist-id }","title":"URL"},{"location":"api/endpoints/#path-parameters","text":"Parameter Description Type Required playlist-id Id of the playlist to return integer Yes","title":"Path Parameters"},{"location":"api/endpoints/#headers_2","text":"Header Name Description Value Required security Basic Authorization Yes","title":"Headers"},{"location":"api/endpoints/#sample-request_2","text":"GET https://api.muzicplayz.com/v3/playlist/ { playlist-id } security: - basauth: [] parameters: - name: playlist-id in : path required: true schema: type: string","title":"Sample Request"},{"location":"api/endpoints/#response_2","text":"","title":"Response"},{"location":"api/endpoints/#details-of-the-playlist-with-songs_2","text":"","title":"Details of the playlist with songs."},{"location":"api/endpoints/#componentsschemasplaylistwithsongs_2","text":"Element Description Type Comments id Id of the playlist integer name Name of the playlist string songs Array of song details array Check song details","title":"/components/schemas/playlistwithsongs"},{"location":"api/endpoints/#details-of-related-to-the-songs-in-the-playlist_2","text":"","title":"Details of related to the songs in the playlist."},{"location":"api/endpoints/#componentsschemassong_2","text":"Element Description Type Comments id Id of the song integer title Name of the song string artist Name of the song string","title":"/components/schemas/song"},{"location":"api/endpoints/#sample-response_2","text":"[ { \"id\": 0, \"name\": \"string\", \"songs\": [ { \"id\": 0, \"title\": \"string\", \"artist\": \"string\" } ] } ]","title":"Sample Response"},{"location":"api/endpoints/#deletes-a-specific-playlist-delete-specific-playlist","text":"Deletes a specific song playlist.","title":"Deletes a specific playlist - DELETE Specific Playlist"},{"location":"api/endpoints/#url_3","text":"DELETE https://api.muzicplayz.com/v3/playlist/ { playlist-id }","title":"URL"},{"location":"api/endpoints/#path-parameters_1","text":"Parameter Description Type Required playlist-id Id of the playlist to return integer Yes","title":"Path Parameters"},{"location":"api/endpoints/#headers_3","text":"Header Name Description Value Required security Basic Authorization Yes","title":"Headers"},{"location":"api/endpoints/#sample-request_3","text":"DELETE https://api.muzicplayz.com/v3/playlist/ { playlist-id } security: - basauth: [] parameters: - name: playlist-id in : path required: true schema: type: string","title":"Sample Request"},{"location":"api/endpoints/#response_3","text":"","title":"Response"},{"location":"api/endpoints/#details-of-the-error-message-in-response","text":"","title":"Details of the error message in response."},{"location":"api/endpoints/#componentsschemaserror","text":"Element Description Type Comments errormsg Id of the playlist integer logdata Name of the playlist string Check logdata details","title":"/components/schemas/error"},{"location":"api/endpoints/#details-of-logdata","text":"Element Description Type Comments entry Id of the song integer date Name of the song integer","title":"Details of logdata."},{"location":"api/endpoints/#sample-response_3","text":"{ \"errormsg\": \"string\", \"logdata\": { \"entry\": 0, \"date\": 0 } }","title":"Sample Response"},{"location":"api/endpoints/#returns-a-specific-playlist-as-image-get-specific-playlist-as-image","text":"Gets a specific song playlist as an image.","title":"Returns a specific playlist as Image - GET Specific Playlist as Image"},{"location":"api/endpoints/#url_4","text":"GET https://api.muzicplayz.com/v3/playlist/ { playlist-id } /image","title":"URL"},{"location":"api/endpoints/#path-parameters_2","text":"Parameter Description Type Required playlist-id Id of the playlist to return integer Yes","title":"Path Parameters"},{"location":"api/endpoints/#headers_4","text":"Header Name Description Value Required security Basic Authorization Yes","title":"Headers"},{"location":"api/endpoints/#sample-request_4","text":"GET https://api.muzicplayz.com/v3/playlist/ { playlist-id } /image security: - basauth: [] parameters: - name: playlist-id in : path required: true schema: type: string","title":"Sample Request"},{"location":"api/endpoints/#sample-response_4","text":"string","title":"Sample Response"},{"location":"api/errors/","text":"Errors & Status Codes The Music API uses standard HTTP status codes to indicate success or failure. Success Responses Code Description Comments 200 OK Successful Response for all operations Error Responses Code Description Comments 401 Unauthorised Already Deleted for Delete operation Example Error { \"errormsg\" : \"This playlist is already deleted.\" }","title":"Errors & Status Codes"},{"location":"api/errors/#errors-status-codes","text":"The Music API uses standard HTTP status codes to indicate success or failure.","title":"Errors &amp; Status Codes"},{"location":"api/errors/#success-responses","text":"Code Description Comments 200 OK Successful Response for all operations","title":"Success Responses"},{"location":"api/errors/#error-responses","text":"Code Description Comments 401 Unauthorised Already Deleted for Delete operation","title":"Error Responses"},{"location":"api/errors/#example-error","text":"{ \"errormsg\" : \"This playlist is already deleted.\" }","title":"Example Error"},{"location":"changelog/api-versions/","text":"API Version History This page documents all publicly released versions of the Music API. Version 1.0.0 \u2013 Initial Public Release Release Date: 2025-03-15 Status: Stable Version Type: Major Release Summary Version 1.0.0 marks the first official release of the Music API. This version includes all core playlist management features and introduces basic authentication. New Features Playlist Management Endpoints POST /playlist : Create a new playlist GET /playlist : Fetch all playlists for the authenticated user DELETE /playlist/{playlist_id} : Delete a playlist by Id Authentication Basic Authentication via - security: - basauth: [] Rate Limiting/ Throttling Requests are none by default . Technical Details API versioning is supported via the base path ( /v3 ) JSON is the default request and response format All endpoints follow RESTful principles Error responses follow a unified schema : { \"errormsg\" : \"This is an error msg\" } Documentation & Tools Static documentation site available via MkDocs Generated via Swagger/OpenAPI specifications Known Limitations No support for file uploads or media streaming yet Webhooks and SDKs are not yet available Versioning Policy The Music API follows Semantic Versioning : MAJOR: Incompatible API changes MINOR: Backward-compatible feature additions PATCH: Backward-compatible bug fixes Version 1.1.0 \u2013 New Features Release Release Date: 2025-04-26 Status: Stable Version Type: Minor Release Summary Version 1.1.0 marks the new features release of the Music API. This version includes some more playlist management features with basic authentication. New Features Playlist Management Endpoints GET /playlist/{playlist-id} : Fetch a playlist by Id GET /playlist/{playlist_id}/image : Fetch a playlist by Id as image Authentication Basic Authentication via - security: - basauth: [] Rate Limiting/ Throttling Requests are none by default . Technical Details API versioning is supported via the base path ( /v3 ) JSON is the default request and response format All endpoints follow RESTful principles Documentation & Tools Static documentation site available via MkDocs Generated via Swagger/OpenAPI specifications Known Limitations No support for file uploads or media streaming yet Webhooks and SDKs are not yet available Versioning Policy The Music API follows Semantic Versioning : MAJOR: Incompatible API changes MINOR: Backward-compatible feature additions PATCH: Backward-compatible bug fixes Future versions will be listed below as they are released.","title":"API Version History"},{"location":"changelog/api-versions/#api-version-history","text":"This page documents all publicly released versions of the Music API.","title":"API Version History"},{"location":"changelog/api-versions/#version-100-initial-public-release","text":"Release Date: 2025-03-15 Status: Stable Version Type: Major Release","title":"Version 1.0.0 \u2013 Initial Public Release"},{"location":"changelog/api-versions/#summary","text":"Version 1.0.0 marks the first official release of the Music API. This version includes all core playlist management features and introduces basic authentication.","title":"Summary"},{"location":"changelog/api-versions/#new-features","text":"Playlist Management Endpoints POST /playlist : Create a new playlist GET /playlist : Fetch all playlists for the authenticated user DELETE /playlist/{playlist_id} : Delete a playlist by Id Authentication Basic Authentication via - security: - basauth: [] Rate Limiting/ Throttling Requests are none by default .","title":"New Features"},{"location":"changelog/api-versions/#technical-details","text":"API versioning is supported via the base path ( /v3 ) JSON is the default request and response format All endpoints follow RESTful principles Error responses follow a unified schema : { \"errormsg\" : \"This is an error msg\" }","title":"Technical Details"},{"location":"changelog/api-versions/#documentation-tools","text":"Static documentation site available via MkDocs Generated via Swagger/OpenAPI specifications","title":"Documentation &amp; Tools"},{"location":"changelog/api-versions/#known-limitations","text":"No support for file uploads or media streaming yet Webhooks and SDKs are not yet available","title":"Known Limitations"},{"location":"changelog/api-versions/#versioning-policy","text":"The Music API follows Semantic Versioning : MAJOR: Incompatible API changes MINOR: Backward-compatible feature additions PATCH: Backward-compatible bug fixes","title":"Versioning Policy"},{"location":"changelog/api-versions/#version-110-new-features-release","text":"Release Date: 2025-04-26 Status: Stable Version Type: Minor Release","title":"Version 1.1.0 \u2013 New Features Release"},{"location":"changelog/api-versions/#summary_1","text":"Version 1.1.0 marks the new features release of the Music API. This version includes some more playlist management features with basic authentication.","title":"Summary"},{"location":"changelog/api-versions/#new-features_1","text":"Playlist Management Endpoints GET /playlist/{playlist-id} : Fetch a playlist by Id GET /playlist/{playlist_id}/image : Fetch a playlist by Id as image Authentication Basic Authentication via - security: - basauth: [] Rate Limiting/ Throttling Requests are none by default .","title":"New Features"},{"location":"changelog/api-versions/#technical-details_1","text":"API versioning is supported via the base path ( /v3 ) JSON is the default request and response format All endpoints follow RESTful principles","title":"Technical Details"},{"location":"changelog/api-versions/#documentation-tools_1","text":"Static documentation site available via MkDocs Generated via Swagger/OpenAPI specifications","title":"Documentation &amp; Tools"},{"location":"changelog/api-versions/#known-limitations_1","text":"No support for file uploads or media streaming yet Webhooks and SDKs are not yet available","title":"Known Limitations"},{"location":"changelog/api-versions/#versioning-policy_1","text":"The Music API follows Semantic Versioning : MAJOR: Incompatible API changes MINOR: Backward-compatible feature additions PATCH: Backward-compatible bug fixes Future versions will be listed below as they are released.","title":"Versioning Policy"},{"location":"overview/key-concepts/","text":"Key Concepts Understanding the core concepts of the Music API will help you build efficiently. Authentication All API requests require a Basic authorisation. Resources Our core resource is the playlist . Each playlist is associated with a user and can contain metadata like id, description, and song-ids. Pagination & Filtering Use query parameters to paginate large responses Filtering options are available on selected endpoints Errors The API returns standardized HTTPS status codes with clear error messages to help you debug effectively.","title":"Key Concepts"},{"location":"overview/key-concepts/#key-concepts","text":"Understanding the core concepts of the Music API will help you build efficiently.","title":"Key Concepts"},{"location":"overview/key-concepts/#authentication","text":"All API requests require a Basic authorisation.","title":"Authentication"},{"location":"overview/key-concepts/#resources","text":"Our core resource is the playlist . Each playlist is associated with a user and can contain metadata like id, description, and song-ids.","title":"Resources"},{"location":"overview/key-concepts/#pagination-filtering","text":"Use query parameters to paginate large responses Filtering options are available on selected endpoints","title":"Pagination &amp; Filtering"},{"location":"overview/key-concepts/#errors","text":"The API returns standardized HTTPS status codes with clear error messages to help you debug effectively.","title":"Errors"},{"location":"overview/what-is-api/","text":"What is the Music API? The Music API is a RESTful web service that allows developers to manage and manipulate playlists like playlist & song-related data. Core Capabilities Create user playlists Retrieve a list of playlists or a specific playlist Delete existing playlists using playlist-id Retrieve a specific playlist as image Use Cases Build custom music playlists Automate playlist creation, management & deletion API Design RESTful Architecture Written in YAML JSON-formatted requests and responses Secured with Basic authentication","title":"What is the API?"},{"location":"overview/what-is-api/#what-is-the-music-api","text":"The Music API is a RESTful web service that allows developers to manage and manipulate playlists like playlist & song-related data.","title":"What is the Music API?"},{"location":"overview/what-is-api/#core-capabilities","text":"Create user playlists Retrieve a list of playlists or a specific playlist Delete existing playlists using playlist-id Retrieve a specific playlist as image","title":"Core Capabilities"},{"location":"overview/what-is-api/#use-cases","text":"Build custom music playlists Automate playlist creation, management & deletion","title":"Use Cases"},{"location":"overview/what-is-api/#api-design","text":"RESTful Architecture Written in YAML JSON-formatted requests and responses Secured with Basic authentication","title":"API Design"},{"location":"tools/swagger/","text":"Swagger / OpenAPI Specification The Music API is documented using the OpenAPI Specification (OAS) \u2014 a standardized format for describing RESTful APIs. Why Use the OpenAPI Spec? Easily visualize and explore endpoints using Swagger UI Validate request/response formats Swagger UI You can access the Swagger UI Here This interactive documentation lets you: Try out endpoints directly in the browser View expected request/response payloads See all available endpoints, schemas and parameters \ud83d\udce6 Download the OpenAPI Spec To integrate with tooling or generate clients, download the OpenAPI (YAML) spec: musicapi.yaml","title":"Swagger / OpenAPI Spec"},{"location":"tools/swagger/#swagger-openapi-specification","text":"The Music API is documented using the OpenAPI Specification (OAS) \u2014 a standardized format for describing RESTful APIs.","title":"Swagger / OpenAPI Specification"},{"location":"tools/swagger/#why-use-the-openapi-spec","text":"Easily visualize and explore endpoints using Swagger UI Validate request/response formats","title":"Why Use the OpenAPI Spec?"},{"location":"tools/swagger/#swagger-ui","text":"You can access the Swagger UI Here This interactive documentation lets you: Try out endpoints directly in the browser View expected request/response payloads See all available endpoints, schemas and parameters","title":"Swagger UI"},{"location":"tools/swagger/#download-the-openapi-spec","text":"To integrate with tooling or generate clients, download the OpenAPI (YAML) spec: musicapi.yaml","title":"\ud83d\udce6 Download the OpenAPI Spec"},{"location":"use-cases/quickstart/","text":"Quickstart Guide Get up and running with the Music API in minutes. Prerequisites Basic API Authorization HTTP client (like curl ) Step 1: Create a Playlist curl -X POST https://muzicplayz.com/v3/playlist \\ -d '{\"name\": \"Chill Vibes\", \"songIds\": [22, 3, 11, 45, 54]}' Step 2: Fetch Playlist as Image curl -X GET https://muzicplayz.com/v3/playlist/ { playlist-id } /image \\ Step 3: Fetch Playlists curl -X GET https://muzicplayz.com/v3/playlists \\ Step 4: Fetch Specific Playlist curl -X GET https://muzicplayz.com/v3/playlists/ { playlist-id } \\ Step 5: Delete Playlist curl -X DELETE https://muzicplayz.com/v3/playlists/ { playlist-id } \\","title":"Quickstart"},{"location":"use-cases/quickstart/#quickstart-guide","text":"Get up and running with the Music API in minutes.","title":"Quickstart Guide"},{"location":"use-cases/quickstart/#prerequisites","text":"Basic API Authorization HTTP client (like curl )","title":"Prerequisites"},{"location":"use-cases/quickstart/#step-1-create-a-playlist","text":"curl -X POST https://muzicplayz.com/v3/playlist \\ -d '{\"name\": \"Chill Vibes\", \"songIds\": [22, 3, 11, 45, 54]}'","title":"Step 1: Create a Playlist"},{"location":"use-cases/quickstart/#step-2-fetch-playlist-as-image","text":"curl -X GET https://muzicplayz.com/v3/playlist/ { playlist-id } /image \\","title":"Step 2: Fetch Playlist as Image"},{"location":"use-cases/quickstart/#step-3-fetch-playlists","text":"curl -X GET https://muzicplayz.com/v3/playlists \\","title":"Step 3: Fetch Playlists"},{"location":"use-cases/quickstart/#step-4-fetch-specific-playlist","text":"curl -X GET https://muzicplayz.com/v3/playlists/ { playlist-id } \\","title":"Step 4: Fetch Specific Playlist"},{"location":"use-cases/quickstart/#step-5-delete-playlist","text":"curl -X DELETE https://muzicplayz.com/v3/playlists/ { playlist-id } \\","title":"Step 5: Delete Playlist"},{"location":"use-cases/real-world/","text":"Real-World Scenarios Here are some ways developers are using the Music API: Custom Music Apps Build personalized music playlists. Let users create, find, and manage playlists. Social Integration Allow users to sync their favorite tracks at one place. Data-Driven Playlists Generate playlists using AI/music analysis Automate playlist curation based on time of day, mood, or activity Batch Operations Sync music libraries from other platforms","title":"Real-World Scenarios"},{"location":"use-cases/real-world/#real-world-scenarios","text":"Here are some ways developers are using the Music API:","title":"Real-World Scenarios"},{"location":"use-cases/real-world/#custom-music-apps","text":"Build personalized music playlists. Let users create, find, and manage playlists.","title":"Custom Music Apps"},{"location":"use-cases/real-world/#social-integration","text":"Allow users to sync their favorite tracks at one place.","title":"Social Integration"},{"location":"use-cases/real-world/#data-driven-playlists","text":"Generate playlists using AI/music analysis Automate playlist curation based on time of day, mood, or activity","title":"Data-Driven Playlists"},{"location":"use-cases/real-world/#batch-operations","text":"Sync music libraries from other platforms","title":"Batch Operations"}]}